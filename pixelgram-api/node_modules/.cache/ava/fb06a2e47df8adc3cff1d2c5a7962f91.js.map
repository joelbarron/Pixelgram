{"version":3,"sources":["auth-test.js"],"names":["beforeEach","t","srv","context","url","user","getUser","options","method","uri","json","body","username","password","resolveWithFullResponse","token","decoded","verifyToken","secret","is"],"mappings":"AAAA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA;AACA;AACA,cAAKA,UAAL;AAAA,+BAAgB,WAAMC,CAAN,EAAW;AACzB,QAAIC,MAAM,oCAAV;AACAD,MAAEE,OAAF,CAAUC,GAAV,GAAgB,MAAM,0BAAOF,GAAP,CAAtB;AACD,GAHD;;AAAA;AAAA;AAAA;AAAA;;AAKA;AACA;AACA,mBAAK,gBAAL;AAAA,gCAAuB,WAAMD,CAAN,EAAW;AAChC,QAAII,OAAO,mBAASC,OAAT,EAAX;AACA,QAAIF,MAAMH,EAAEE,OAAF,CAAUC,GAApB;;AAEA,QAAIG,UAAU;AACZC,cAAQ,MADI;AAEZC,WAAKL,GAFO;AAGZM,YAAM,IAHM;AAIZC,YAAM;AACJC,kBAAUP,KAAKO,QADX;AAEJC,kBAAUR,KAAKQ;AAFX,OAJM;AAQZC,+BAAyB;AARb,KAAd;;AAWA,QAAIC,QAAQ,MAAM,8BAAQR,OAAR,CAAlB;AACA,QAAIS,UAAU,MAAM,gBAAMC,WAAN,CAAkBF,KAAlB,EAAyB,iBAAOG,MAAhC,CAApB;;AAEAjB,MAAEkB,EAAF,CAAKH,QAAQJ,QAAb,EAAuBP,KAAKO,QAA5B;AACD,GAnBD;;AAAA;AAAA;AAAA;AAAA","file":"auth-test.js","sourcesContent":["'use strict'\n\nimport test from 'ava'\nimport micro from 'micro'\nimport listen from 'test-listen'\nimport request from 'request-promise'\nimport fixtures from './fixtures'\nimport utils from '../lib/utils'\nimport config from '../config'\nimport auth from '../auth'\n\n// ESTE TEST SE EJECUTA PRIMERO QUE TODOS LOS DEMAS Y SE ENCARGA DE:\n// LEVANTAR EL SERVICIO\ntest.beforeEach(async t => {\n  let srv = micro(auth)\n  t.context.url = await listen(srv)\n})\n\n// ESTE TEST SIRVE PARA PROBAR LA FUNCIONALIDA DE:\n// AUTENTICACION\ntest('success POST /', async t => {\n  let user = fixtures.getUser()\n  let url = t.context.url\n\n  let options = {\n    method: 'POST',\n    uri: url,\n    json: true,\n    body: {\n      username: user.username,\n      password: user.password\n    },\n    resolveWithFullResponse: true\n  }\n\n  let token = await request(options)\n  let decoded = await utils.verifyToken(token, config.secret)\n\n  t.is(decoded.username, user.username)\n})\n"]}