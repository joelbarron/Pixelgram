{"version":3,"sources":["users-test.js"],"names":["beforeEach","t","srv","context","url","user","getUser","options","method","uri","json","body","name","username","password","email","resolveWithFullResponse","response","is","statusCode","deepEqual"],"mappings":"AAAA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA;AACA;AACA,cAAKA,UAAL;AAAA,+BAAgB,WAAMC,CAAN,EAAW;AACzB,QAAIC,MAAM,qCAAV;AACAD,MAAEE,OAAF,CAAUC,GAAV,GAAgB,MAAM,0BAAOF,GAAP,CAAtB;AACD,GAHD;;AAAA;AAAA;AAAA;AAAA;;AAKA;AACA;AACA,mBAAK,QAAL;AAAA,gCAAe,WAAMD,CAAN,EAAW;AACxB,QAAII,OAAO,mBAASC,OAAT,EAAX;AACA,QAAIF,MAAMH,EAAEE,OAAF,CAAUC,GAApB;;AAEA,QAAIG,UAAU;AACZC,cAAQ,MADI;AAEZC,WAAKL,GAFO;AAGZM,YAAM,IAHM;AAIZC,YAAM;AACJC,cAAMP,KAAKO,IADP;AAEJC,kBAAUR,KAAKQ,QAFX;AAGJC,kBAAUT,KAAKS,QAHX;AAIJC,eAAOV,KAAKU;AAJR,OAJM;AAUZC,+BAAyB;AAVb,KAAd;;AAaA,QAAIC,WAAW,MAAM,8BAAQV,OAAR,CAArB;;AAEA,WAAOF,KAAKU,KAAZ;AACA,WAAOV,KAAKS,QAAZ;;AAEAb,MAAEiB,EAAF,CAAKD,SAASE,UAAd,EAA0B,GAA1B;AACAlB,MAAEmB,SAAF,CAAYH,SAASN,IAArB,EAA2BN,IAA3B;AACD,GAxBD;;AAAA;AAAA;AAAA;AAAA;;AA0BA,mBAAK,gBAAL;AAAA,gCAAuB,WAAMJ,CAAN,EAAW;AAChC,QAAII,OAAO,mBAASC,OAAT,EAAX;AACA,QAAIF,MAAMH,EAAEE,OAAF,CAAUC,GAApB;;AAEA,QAAIG,UAAU;AACZC,cAAQ,KADI;AAEZC,WAAM,GAAEL,GAAI,IAAGC,KAAKQ,QAAS,EAFjB;AAGZH,YAAM;AAHM,KAAd;;AAMA,QAAIC,OAAO,MAAM,8BAAQJ,OAAR,CAAjB;;AAEA,WAAOF,KAAKU,KAAZ;AACA,WAAOV,KAAKS,QAAZ;;AAEAb,MAAEmB,SAAF,CAAYT,IAAZ,EAAkBN,IAAlB;AACD,GAhBD;;AAAA;AAAA;AAAA;AAAA","file":"users-test.js","sourcesContent":["'use strict'\n\nimport test from 'ava'\nimport micro from 'micro'\nimport listen from 'test-listen'\nimport request from 'request-promise'\nimport fixtures from './fixtures'\nimport users from '../users'\n\n// ESTE TEST SE EJECUTA PRIMERO QUE TODOS LOS DEMAS Y SE ENCARGA DE:\n// LEVANTAR EL SERVICIO\ntest.beforeEach(async t => {\n  let srv = micro(users)\n  t.context.url = await listen(srv)\n})\n\n// ESTE TEST SIRVE PARA PROBAR LA FUNCIONALIDA DE:\n// EL ENDPOINT POST DE LOS USUARIOS\ntest('POST /', async t => {\n  let user = fixtures.getUser()\n  let url = t.context.url\n\n  let options = {\n    method: 'POST',\n    uri: url,\n    json: true,\n    body: {\n      name: user.name,\n      username: user.username,\n      password: user.password,\n      email: user.email\n    },\n    resolveWithFullResponse: true\n  }\n\n  let response = await request(options)\n\n  delete user.email\n  delete user.password\n\n  t.is(response.statusCode, 201)\n  t.deepEqual(response.body, user)\n})\n\ntest('GET /:username', async t => {\n  let user = fixtures.getUser()\n  let url = t.context.url\n\n  let options = {\n    method: 'GET',\n    uri: `${url}/${user.username}`,\n    json: true\n  }\n\n  let body = await request(options)\n\n  delete user.email\n  delete user.password\n\n  t.deepEqual(body, user)\n})\n"]}